# ÏûëÏóÖ Î∏åÎûúÏπòÎ≥Ñ ÎØ∏Î¶¨Î≥¥Í∏∞ ÌôòÍ≤Ω Ï†úÍ≥µ Î∞è ÏûêÎèô ÏÇ≠Ï†ú Í∏∞Îä•
# Ìä∏Î¶¨Í±∞:
#      (ÎØ∏Î¶¨Î≥¥Í∏∞ ÌôòÍ≤Ω ÏÉùÏÑ±) -> develop Î∏åÎûúÏπòÏóê PR ÏÉùÏÑ±
#      (ÎØ∏Î¶¨Î≥¥Í∏∞ ÌôòÍ≤Ω ÏÇ≠Ï†ú) -> Ìï¥Îãπ PR close

name: PR Preview Deployment

on:
    pull_request:
        types:
            - opened # PRÏù¥ Ï≤òÏùå ÏÉùÏÑ±Îê† ÎïåÎßå Ïã§Ìñâ
            - closed # PRÏù¥ Îã´Ìûê Îïå ÏÇ≠Ï†ú Ïã§Ìñâ
        branches:
            - develop # develop Î∏åÎûúÏπò ÎåÄÏÉÅ PRÏóêÏÑúÎßå Ïã§Ìñâ

jobs:
    amplify-preview:
        runs-on: ubuntu-latest
        env:
            AMPLIFY_APP_ID: ${{ secrets.AMPLIFY_APP_ID }}
            PR_BRANCH: ${{ github.head_ref }}
        steps:
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-2

            - name: Set Variables
              id: vars
              run: |
                  # Ïä¨ÎûòÏãú(`/`)Î•º ÌïòÏù¥Ìîà(`-`)ÏúºÎ°ú Î≥ÄÌôò
                  SAFE_BRANCH_NAME=$(echo "$PR_BRANCH" | tr '/' '-')

                  PREVIEW_URL="https://${SAFE_BRANCH_NAME}.${AMPLIFY_APP_ID}.amplifyapp.com"

                  echo "PR_BRANCH=$PR_BRANCH" >> $GITHUB_ENV
                  echo "SAFE_BRANCH_NAME=$SAFE_BRANCH_NAME" >> $GITHUB_ENV
                  echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV

            - name: Check if Branch Exists
              id: check-branch
              run: |
                  BRANCH_EXISTS=$(aws amplify list-branches --app-id $AMPLIFY_APP_ID --region us-east-2 \ --query "branches[].branchName" --output text | grep -w "$PR_BRANCH" || true)

                  if [[ -z "$BRANCH_EXISTS" ]]; then
                      echo "Branch does not exist in Amplify."
                      echo "EXISTS=false" >> $GITHUB_ENV
                      
                  else
                      echo "Branch already exists in Amplify."
                      echo "EXISTS=true" >> $GITHUB_ENV
                      # Î∏åÎûúÏπò ÏÇ≠Ï†ú
                      echo "Deleting existing branch: $PR_BRANCH"
                      aws amplify delete-branch --app-id $AMPLIFY_APP_ID --branch-name "$PR_BRANCH"
                      echo "Waiting for deletion to propagate..."
                      sleep 5  # AmplifyÏóêÏÑú ÏÇ≠Ï†úÍ∞Ä Î∞òÏòÅÎê† ÏãúÍ∞ÑÏùÑ Í∏∞Îã§Î¶º
                  fi

            - name: Create Branch if Not Exists
              if: env.EXISTS == 'false'
              run: |
                  echo "Branch does not exist. Creating..."
                  CREATE_RESULT=$(aws amplify create-branch --app-id $AMPLIFY_APP_ID --branch-name $PR_BRANCH --enable-auto-build 2>&1) || true

                  # "Display Name already exists" Ïò§Î•òÍ∞Ä Î∞úÏÉùÌïòÎ©¥ Î¨¥ÏãúÌïòÍ≥† ÎÑòÏñ¥Í∞ÄÍ∏∞
                  if echo "$CREATE_RESULT" | grep -q "display name"; then
                      echo "‚ö†Ô∏è Warning: Display name already exists. Skipping create-branch."
                  else
                      echo "‚úÖ Branch created successfully."
                  fi

            - name: Deploy to Amplify
              run: |
                  aws amplify start-job --app-id $AMPLIFY_APP_ID --branch-name $PR_BRANCH --job-type RELEASE

            - name: Wait for Amplify Deployment to Complete #Amplify Î∞∞Ìè¨ ÏôÑÎ£å ÌõÑÏóê PR comment ÎÇ®Í∏∞Í∏∞
              run: |
                  echo "Waiting for Amplify deployment to complete..."
                  APP_ID="${{ secrets.AMPLIFY_APP_ID }}"
                  BRANCH_NAME="$PR_BRANCH"
                  TIMEOUT=300  # ÏµúÎåÄ 5Î∂Ñ(300Ï¥à) ÎåÄÍ∏∞
                  INTERVAL=10  # 10Ï¥àÎßàÎã§ ÌôïÏù∏
                  ELAPSED=0

                  while [ $ELAPSED -lt $TIMEOUT ]; do
                      STATUS=$(aws amplify list-jobs --app-id $APP_ID --branch-name $BRANCH_NAME --query "jobSummaries[0].status" --output text)

                      if [[ "$STATUS" == "SUCCEED" ]]; then
                          echo "‚úÖ Deployment succeeded!"
                          echo "DEPLOY_STATUS=success" >> $GITHUB_ENV
                          break
                      elif [[ "$STATUS" == "FAILED" ]]; then
                          echo "‚ùå Deployment failed!"
                          echo "DEPLOY_STATUS=failed" >> $GITHUB_ENV
                          break
                      fi

                      echo "‚è≥ Deployment in progress... ($ELAPSED / $TIMEOUT seconds)"
                      sleep $INTERVAL
                      ELAPSED=$((ELAPSED + INTERVAL))
                  done

                  if [[ "$ELAPSED" -ge "$TIMEOUT" ]]; then
                      echo "‚ö†Ô∏è Timeout reached! Deployment is still not complete."
                      echo "DEPLOY_STATUS=timeout" >> $GITHUB_ENV
                  fi

            - name: Comment Deployment Status on PR
              uses: actions/github-script@v6
              with:
                  github-token: ${{ secrets.ACTION_TOKEN }}
                  script: |
                      const status = process.env.DEPLOY_STATUS;
                      const previewUrl = process.env.PREVIEW_URL;
                      const amplifyConsole = "https://us-east-2.console.aws.amazon.com/amplify/apps/${process.env.AMPLIFY_APP_ID}/overview"
                      let comment = "";

                       if (status === "success") {
                           comment = `‚úÖ **Deployment Successful!**\n\nüöÄ Preview is available at: [**${previewUrl}**](${previewUrl})`;
                       } else if (status === "failed") {
                           comment = `‚ùå **Deployment Failed!**\n\nPlease check AWS Amplify logs for more details.`;
                       } else {
                           comment = `‚ö†Ô∏è **Deployment Timeout!**\n\nAWS Amplify is still processing the deployment. Please check Amplify console manually.`;
                       }

                       github.rest.issues.createComment({
                           issue_number: context.issue.number,
                           owner: context.repo.owner,
                           repo: context.repo.repo,
                           body: comment
                       });

    amplify-cleanup:
        runs-on: ubuntu-latest
        env:
            AMPLIFY_APP_ID: ${{ secrets.AMPLIFY_APP_ID }}
            PR_BRANCH: ${{ github.head_ref }}
        if: github.event.action == 'closed'
        steps:
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-2

            - name: Delete Preview Environment (PR Merged or Closed)
              run: |

                  # Î∏åÎûúÏπò ÏÇ≠Ï†ú
                  aws amplify delete-branch --app-id $AMPLIFY_APP_ID --branch-name $PR_BRANCH --region us-east-2
